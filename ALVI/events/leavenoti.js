const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
  name: "leave",
  eventType: ["log:unsubscribe"],
  version: "1.0.1",
  credits: "ALVI",
  description: "ржЧрзНрж░рзБржк ржерзЗржХрзЗ ржХрзЗржЙ ржЪрж▓рзЗ ржЧрзЗрж▓рзЗ ржмрж╛ рж░рж┐ржорзБржн рж╣рж▓рзЗ ржорзЗрж╕рзЗржЬ ржжрж┐ржмрзЗ"
};

module.exports.run = async function({ api, event, Users, Threads }) {
  try {
    const { threadID } = event;

    // ржпржжрж┐ ржмржЯ ржирж┐ржЬрзЗ рж▓рзЗржлржЯ рж╣рзЯ
    if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;

    const data = (await Threads.getData(threadID)).data || {};
    const name = await Users.getNameUser(event.logMessageData.leftParticipantFbId);

    const type = (event.author == event.logMessageData.leftParticipantFbId)
      ? "ржмрзЗржмрж┐ рждрзЛржорж╛рж░ рж╕рж╛рж╣рж╕ рждрзЛ ржХржо ржирж╛рж╣ ржПржбржорж┐ржи ржПрж░ ржкрж╛рж░ржорж┐рж╢ржи ржЫрж╛рзЬрж╛ржЗ рж▓рж┐ржлржЯ ржирж╛ржУ ЁЯШбЁЯШаЁЯдм\n\nтЬжтФАтФАтФАтФАтФАъпнтФАтГЭтАМтАМЁЭРАЁЭРеЁЭРпЁЭРв ЁЭРВЁЭРбЁЭРЪЁЭРн ЁЭРБЁЭРиЁЭРнтФАтФАтФАтФАтЬж"
      : "рждрзЛржорж╛рж░ ржПржЗ ржЧрзНрж░рзБржкрзЗ ржерж╛ржХрж╛рж░ ржХрзЛржирзЛ ржпрзЛржЧрзНржпрж╛рждрж╛ ржирзЗржЗ!ЁЯШб\nрждрж╛ржЗ рждрзЛржорж╛ржХрзЗ ржЧрзНрж░рзБржк ржерзЗржХрзЗ рж░рж┐ржорзБржн ржХрж░рзЗ ржжрзЗржУрзЯрж╛ рж╣рж▓рзЛ?ЁЯдк\n\nЁЭЧкЁЭЧШЁЭЧЯЁЭЧЦЁЭЧвЁЭЧаЁЭЧШ ЁЭЧеЁЭЧШЁЭЧаЁЭЧвЁЭЧйЁЭЧШЁЯдз\n\nтЬжтФАтФАтФАтФАтФАъпнтФАтГЭтАМтАМЁЭРАЁЭРеЁЭРпЁЭРв ЁЭРВЁЭРбЁЭРЪЁЭРн ЁЭРБЁЭРиЁЭРнтФАтФАтФАтФАтЬж";

    let msg = (typeof data.customLeave == "undefined")
      ? `ржЗрж╕ ${name} ${type}`
      : data.customLeave.replace(/\{name}/g, name).replace(/\{type}/g, type);

    const gifFolder = path.join(__dirname, "cache", "leaveGif");
    const gifPath = path.join(gifFolder, "leave1.gif");

    if (!fs.existsSync(gifFolder)) fs.mkdirSync(gifFolder, { recursive: true });

    const formPush = fs.existsSync(gifPath)
      ? { body: msg, attachment: fs.createReadStream(gifPath) }
      : { body: msg };

    return api.sendMessage(formPush, threadID);
  } catch (err) {
    console.error("Leave event error:", err);
  }
};
